components:
  schemas:
    AccessType:
      enum:
      - public
      - bot_users
      - private
      title: AccessType
      type: string
    AnalysisReport:
      properties:
        access_type:
          $ref: '#/components/schemas/AccessType'
        formation_date:
          format: date-time
          title: Formation Date
          type: string
        id:
          format: uuid
          title: Id
          type: string
        owner:
          $ref: '#/components/schemas/UserInfo'
        product:
          $ref: '#/components/schemas/ProductInfo'
      required:
      - id
      - owner
      - access_type
      - product
      - formation_date
      title: AnalysisReport
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HistoryCreate:
      properties:
        title:
          title: Title
          type: string
        url:
          title: Url
          type: string
      required:
      - title
      - url
      title: HistoryCreate
      type: object
    ProductInfo:
      properties:
        product_image_url:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Product Image Url
          type: string
        product_name_id:
          title: Product Name Id
          type: string
        title:
          title: Title
          type: string
      required:
      - product_name_id
      - product_image_url
      - title
      title: ProductInfo
      type: object
    UserInfo:
      properties:
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        role:
          anyOf:
          - type: string
          - type: 'null'
          default: user
          title: Role
      title: UserInfo
      type: object
    UserUpdate:
      properties:
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        is_accept_terms:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          title: Is Accept Terms
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          title: Is Active
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        role:
          anyOf:
          - type: string
          - type: 'null'
          default: user
          title: Role
        tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Tokens
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      title: UserUpdate
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    Active telegram user ID:
      in: header
      name: Telegram-User-Id
      type: apiKey
    Cas Web JWT Token:
      in: cookie
      name: api-token
      type: apiKey
    Cas Web Service API Key:
      in: header
      name: X-API-Key
      type: apiKey
info:
  title: CAS-Bot-Web-Service API
  version: 0.1.0
openapi: 3.1.0
paths:
  /api/v1/admin/activity:
    get:
      operationId: get_user_activity_api_v1_admin_activity_get
      parameters:
      - in: query
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Get User Activity
      tags:
      - Admins
  /api/v1/admin/activity/all:
    get:
      operationId: get_all_users_activity_api_v1_admin_activity_all_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Get All Users Activity
      tags:
      - Admins
  /api/v1/admin/ban:
    post:
      operationId: ban_user_api_v1_admin_ban_post
      parameters:
      - in: query
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Ban User
      tags:
      - Admins
  /api/v1/admin/role:
    post:
      operationId: change_user_role_api_v1_admin_role_post
      parameters:
      - in: query
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      - in: query
        name: role
        required: true
        schema:
          title: Role
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Change User Role
      tags:
      - Admins
  /api/v1/admin/stats:
    get:
      operationId: get_new_users_stats_api_v1_admin_stats_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Get New Users Stats
      tags:
      - Admins
  /api/v1/admin/token:
    post:
      operationId: add_user_token_api_v1_admin_token_post
      parameters:
      - in: query
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      - in: query
        name: tokens
        required: true
        schema:
          title: Tokens
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Add User Token
      tags:
      - Admins
  /api/v1/analysis_report/info/{report_id}:
    get:
      operationId: get_info_report_api_v1_analysis_report_info__report_id__get
      parameters:
      - in: path
        name: report_id
        required: true
        schema:
          format: uuid
          title: Report Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisReport'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Get Info Report
      tags:
      - Report
  /api/v1/analysis_report/list:
    get:
      operationId: get_list_reports_api_v1_analysis_report_list_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AnalysisReport'
                title: Response Get List Reports Api V1 Analysis Report List Get
                type: array
          description: Successful Response
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Get List Reports
      tags:
      - Report
  /api/v1/bookmarks/:
    get:
      operationId: get_bookmark_api_v1_bookmarks__get
      parameters:
      - in: query
        name: bookmark_id
        required: true
        schema:
          title: Bookmark Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Get Bookmark
      tags:
      - Bookmarks
  /api/v1/bookmarks/all:
    get:
      operationId: ger_all_bookmarks_api_v1_bookmarks_all_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Ger All Bookmarks
      tags:
      - Bookmarks
  /api/v1/history/:
    post:
      operationId: create_history_api_v1_history__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                message: success
              schema: {}
          description: Successful Response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          description: Validation Error
        '500':
          description: Internal Server Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Create History
      tags:
      - Histories
  /api/v1/history/all:
    delete:
      operationId: delete_all_histories_api_v1_history_all_delete
      responses:
        '200':
          content:
            application/json:
              example:
                message: success
              schema: {}
          description: Successful Response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          description: Validation Error
        '500':
          description: Internal Server Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Delete All Histories
      tags:
      - Histories
    get:
      operationId: get_all_histories_api_v1_history_all_get
      responses:
        '200':
          content:
            application/json:
              example:
              - date: string
                id: 0
                title: string
                url: string
                user_id: 0
              schema: {}
          description: Successful Response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          description: Validation Error
        '500':
          description: Internal Server Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Get All Histories
      tags:
      - Histories
  /api/v1/login:
    get:
      description: Route for obtaining a JWT token
      operationId: signin_api_v1_login_get
      parameters:
      - in: query
        name: return_to
        required: true
        schema:
          title: Return To
          type: string
      - in: query
        name: id
        required: true
        schema:
          title: Id
          type: integer
      - in: query
        name: first_name
        required: true
        schema:
          title: First Name
          type: string
      - in: query
        name: last_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
      - in: query
        name: username
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      - in: query
        name: photo_url
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Photo Url
      - in: query
        name: auth_date
        required: true
        schema:
          title: Auth Date
          type: integer
      - in: query
        name: hash
        required: true
        schema:
          title: Hash
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signin
      tags:
      - Auth
  /api/v1/signup:
    get:
      description: 'Route for user registration in the system via telegram bot.

        The user will be automatically added to the system via the Web when logging
        in via telegram.'
      operationId: signup_api_v1_signup_get
      parameters:
      - in: query
        name: return_to
        required: true
        schema:
          title: Return To
          type: string
      - in: query
        name: id
        required: true
        schema:
          title: Id
          type: integer
      - in: query
        name: first_name
        required: true
        schema:
          title: First Name
          type: string
      - in: query
        name: last_name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
      - in: query
        name: username
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      - in: query
        name: is_accept_terms
        required: false
        schema:
          default: false
          title: Is Accept Terms
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Cas Web Service API Key: []
      summary: Signup
      tags:
      - Auth
  /api/v1/users/:
    delete:
      operationId: delete_user_api_v1_users__delete
      responses:
        '200':
          content:
            application/json:
              example:
                message: success
              schema: {}
          description: Successful Response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          description: Validation Error
        '500':
          description: Internal Server Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Delete User
      tags:
      - Users
    put:
      operationId: update_user_api_v1_users__put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                created_profile: string
                first_name: string
                id: 0
                is_accept_terms: true
                is_active: true
                last_name: string
                role: string
                tokens: 0
                username: string
              schema: {}
          description: Successful Response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          description: Validation Error
        '500':
          description: Internal Server Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Update User
      tags:
      - Users
  /api/v1/users/accept-terms:
    get:
      operationId: accept_terms_user_api_v1_users_accept_terms_get
      responses:
        '200':
          content:
            application/json:
              example:
                message: success
              schema: {}
          description: Successful Response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '422':
          description: Validation Error
        '500':
          description: Internal Server Error
      security:
      - Cas Web Service API Key: []
      - Active telegram user ID: []
      - Cas Web JWT Token: []
      summary: Accept Terms User
      tags:
      - Users
